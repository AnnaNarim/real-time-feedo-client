{"version":3,"sources":["assets/logo.png","assets/image2.jpg","assets/image1.jpg","constant.js","lib/jsUtils.js","components/App/PrivateRoute.js","components/Header/AuthenticatedNavBar.js","components/Header/NonAuthenticatedNavBar.js","components/Header/Header.js","components/Layout/Layout.js","helper/jwtHelper.js","components/Authentication/Login.js","components/Authentication/SignUp.js","components/Post/PostDelete.js","components/Post/PostEdit.js","components/Post/PostPublish.js","components/Post/Post.js","components/Drafts/Drafts.js","components/CreatePost/CreatePost.js","components/SinglePostView/QrComponent.js","components/SinglePostView/ChartsComponent.js","components/SinglePostView/ClassPublish.js","components/SinglePostView/SinglePostView.js","components/PostAnswersForm/PostAnswersForm.js","components/App/App.js","index.js","lib/appTheme/index.js"],"names":["module","exports","__webpack_require__","p","AUTH_TOKEN","SIGN_UP","SIGN_IN","DRAFTS","BLOG","CREATE_NEW_POST","isAuthenticated","localStorage","getItem","baseIsFunction","value","Uint8Array","clone","obj","JSON","parse","stringify","Array","isArray","PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","pathname","state","from","location","LogOutDialog","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","maxHeight","_useState3","useState","_useState4","slicedToArray","open","setOpen","Dialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","id","DialogContent","dividers","DialogActions","Button","autoFocus","onClick","color","removeItem","window","href","AuthenticatedNavBar","_useState","_useState2","showLogoutDialog","setShowLogOutDialog","Link","AuthenticatedNavBar_LogOutDialog","NonAuthenticatedNavBar","useStyles","_title","appBar","logoIcon","marginRight","menuButton","spacing","titleContainer","textDecoration","title","display","defineProperty","breakpoints","up","toolbarGutters","margin","withRouter","classes","verify","isLoginOrSignUpPage","includes","AppBar","position","className","Toolbar","gutters","Box","alignItems","src","Logo","alt","Typography","variant","justifyContent","style","marginLeft","Header_AuthenticatedNavBar","Header_NonAuthenticatedNavBar","@global","html , body , #root","height","gridTemplateRows","children","_location$pathname","react","CssBaseline","components_Header_Header","isTokenExpired","token","date","decoded","decode","exp","Date","setUTCSeconds","getTokenExpirationDate","valueOf","offsetSeconds","Copyright","align","getFullYear","LOGIN_USER_MUTATION","gql","_templateObject","image","backgroundImage","concat","sideImage","backgroundRepeat","type","grey","backgroundSize","backgroundPosition","flexDirection","avatar","secondary","main","form","marginTop","submit","SignInSide","refreshTokenFn","_location$state","_state$from","email","setEmail","password","setPassword","_useState5","_useState6","redirectToReferrer","setRedirectToReferrer","_useMutation","useMutation","onCompleted","login","Grid","container","item","xs","sm","md","Paper","elevation","square","Avatar","LockOutlined_default","noValidate","onSubmit","e","preventDefault","variables","TextField","onChange","target","required","fullWidth","label","name","autoComplete","mt","SIGNUP_USER_MUTATION","SignUp_templateObject","INITIAL_INFO","SignUpSide","info","setInfo","signup","changeHandler","objectSpread","SignUp_Copyright","DELETE_MUTATION","PostDelete_templateObject","backdrop","zIndex","drawer","DeletePostConfirmDialog","_ref2","onConfirm","onClose","Dialog_default","DialogTitle_default","DialogContent_default","DialogActions_default","DeletePost","refresh","showConfirmDialog","setShowConfirmDialog","_useMutation2","deletePost","loading","Backdrop_default","CircularProgress_default","IconButton","DeleteOutlined_default","PostDelete_DeletePostConfirmDialog","then","UPDATE_MUTATION","PostEdit_templateObject","VALIDATION_INITIAL_STATE","isValid","errorMsgs","EditPostConfirmDialog","PropsTitle","PropsContent","content","_useState7","_useState8","validInfo","setValidInfo","_validInfo$errorMsgs","useEffect","TextField_default","placeholder","error","Boolean","helperText","_ref3","multiline","rows","rowsMax","_ref4","newValidInfo","keys","length","validateForm","UpdatePost","updateDraft","EditOutlined_default","PostEdit_EditPostConfirmDialog","PUBLISH_MUTATION","PostPublish_templateObject","GreenSwitch","withStyles","switchBase","&$checked","&$checked + $track","checked","track","Switch","PublishPost","isPublished","publish","FormControlLabel_default","control","published","Post","post","author","Card","CardActionArea","CardContent","gutterBottom","noWrap","CardActions","PostPublish","PostDelete","PostEdit","DRAFTS_QUERY","Drafts_templateObject","_state$shouldRefetch","shouldRefetch","needRefetch","setNeedRefetch","_useQuery","useQuery","options","fetchPolicy","_useQuery$data","data","refetch","_data$drafts","drafts","Backdrop_Backdrop","CircularProgress_CircularProgress","Container","GridList","cellHeight","cols","map","draft","GridListTile","key","CREATE_DRAFT_MUTATION","CreatePost_templateObject","submitBtn","selection","answerTypesWrapper","gridTemplateColumns","gridGap","fieldWrapper","& > div ","fieldsContainer","INITIAL_STATE","anonymous","answerType","fields","CreatePost","createDraft","fixed","disabled","select","option","MenuItem","field","index","flex","updatedField","updatedFields","minWidth","_ref5","filter","i","Delete_default","FormControlLabel_FormControlLabel","Checkbox","_ref6","CREATE_CLASS_MUTATION","QrComponent_templateObject","postId","setClassName","keyValue","setKeyValue","createClass","QRvalue","FullScreenDialog","renderQr","size","qrcode_react_lib_default","level","justifyItems","Transition","React","forwardRef","ref","Slide","direction","_React$useState","_React$useState2","_useWindowSize","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","_useWindowSize2","fullScreen","TransitionComponent","colors","scaleOrdinal","schemeCategory10","range","subject","A","B","fullMark","data2","uv","female","male","getPath","x","y","TriangleBar","fill","d","stroke","ChartsComponent","es6","top","right","left","bottom","strokeDasharray","dataKey","shape","ChartsComponent_TriangleBar","entry","cx","cy","fillOpacity","PureComponent","CLASS_PUBLISH_MUTATION","ClassPublish_templateObject","PublishClass","publishClass","ClassPublish_GreenSwitch","stopPropagation","POST_QUERY","SinglePostView_templateObject","padding","text","selectionRoot","& .MuiTextField-root","match","history","_match$params","params","_data$post","_post$classes","postClasses","paddingTop","push","ClassPublish","SinglePostView_QrComponent","ChartsComponent_ChartsComponent","FIELDS_QUERY","PostAnswersForm_templateObject","_data$class","class","postClass","_postClass$post","_post$fields","ME_QUERY","App_templateObject","Public","Blog","Protected","setToken","undefined","console","log","App","PropsToken","setItem","react_router_dom","components_Layout_Layout","exact","path","App_PrivateRoute","DraftsPage","SinglePostView","PostAnswersForm","role","aria-label","client","ApolloClient","uri","request","operation","setContext","headers","Authorization","onError","graphQLErrors","networkError","forEach","err","alert","MyApp","react_common_esm","ThemeProvider","createMuiTheme","primary","src_MyApp","document","getElementById"],"mappings":"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","file":"static/js/main.d83149c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4cead3cc.png\";","module.exports = __webpack_public_path__ + \"static/media/image2.ade0a065.jpg\";","module.exports = __webpack_public_path__ + \"static/media/image1.02864c39.jpg\";","export const USER_ID = 'user-id'\nexport const DOMAIN =\"https://placholder/\";\nexport const LANDING = '/';\nexport const AUTH_TOKEN = 'AUTH_TOKEN';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/login';\nexport const DRAFTS = '/drafts';\nexport const BLOG = '/blog';\nexport const CREATE_NEW_POST=\"/create-post\";\n\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const EXPLORE = '/explore';\nexport const TUTORIALS = '/tutorials';\nexport const TUTORIAL = '/tutorials/:tutorialId';\nexport const GROUP = '/tutorials/:tutorialId/:groupId';\nexport const SLIDES = '/tutorials/:tutorialId/:groupId/slides';\nexport const SLIDE = '/tutorials/:tutorialId/:groupId/:slideId';\nexport const SINGLE_SLIDE = '/:slideId';\n","import {AUTH_TOKEN} from \"../constant\";\n\nexport function canView(me) {\n    return true;\n}\nexport function canEdit(me) {\n    return true;//me && me.roles && me.roles.includes(\"ADMIN\");\n}\n\nexport function noop() {\n}\n\nexport function setToken(token) {\n    localStorage.setItem(AUTH_TOKEN, JSON.stringify(token));\n}\n\nexport function isAuthenticated() {\n    return !!localStorage.getItem(AUTH_TOKEN);\n}\n\nexport function signOut() {\n    return localStorage.removeItem(AUTH_TOKEN);\n}\n\nexport function isString(value) {\n    return typeof value === 'string' || value instanceof String;\n}\n\nconst baseIsFunction = function(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value === 'function' || false;\n};\n\nexport const isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in older versions of Chrome and Safari which return 'function' for regexes\n    // and Safari 8 equivalents which return 'object' for typed array constructors.\n    return Object.prototype.toString.call(value) === '[object Function]';\n};\n\nexport function guid() {\n    let d = new Date().getTime();\n    const uuid = 'guid_xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : ((r & 0x7) | 0x8)).toString(16);\n    });\n    return uuid;\n}\n\n\nexport function equals(o1, o2, params) {\n    try {\n\n        if (!params)\n            params = {};\n\n        if (o1 === o2)\n            return true;\n\n        if (typeof (o1) !== typeof (o2))\n            return false;\n\n        if (typeof (o1) === 'function')\n            return true;\n\n        //            if(o1.equals)\n        //                return o1.equals(o2);\n        //\n        //            if(o2.equals)\n        //                return o2.equals(o1);\n\n\n        // special case for comparing dom elements\n        if (o1.tagName && o1.nodeName) {\n            if (o1.id || o2.id)\n                return o1.id === o2.id;\n            else\n                return o1 === o2;\n        }\n\n        if (params.loose && o1.id)\n            return (o1.id === o2.id);\n\n        if (o1 instanceof Date) {\n            return (o1.getTime() === o2.getTime());\n        } else if (Array.isArray(o1)) {\n            if (o1.length !== o2.length)\n                return false;\n\n            for (var i = 0; i < o1.length; i++) {\n                if (params.avoidAttrs && params.avoidAttrs[i])\n                    continue;\n                if (!equals(o1[i], o2[i], params)) {\n                    return false;\n                }\n            }\n        } else if (typeof (o1) === 'object') {\n\n            var len1 = 0;\n            var len2 = 0;\n            for (let key in o1) {\n                if (params.avoidAttrs && params.avoidAttrs[key])\n                    continue;\n                if (o1[key] === undefined || o1[key] === null)\n                    continue;\n                len1++;\n            }\n            for (let key in o2) {\n                if (params.avoidAttrs && params.avoidAttrs[key])\n                    continue;\n                if (o2[key] === undefined || o2[key] === null)\n                    continue;\n                len2++;\n\n                if (!equals(o1[key], o2[key], params)) {\n                    return false;\n                }\n            }\n            return (len1 === len2);\n        } else {\n            return (o1 === o2);\n        }\n        return true;\n\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function isObject(item) {\n    return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\nexport function toArray(val) {\n    if (val === undefined || val === null)\n        return [];\n    if (!Array.isArray(val))\n        val = [val];\n    return val;\n}\n\nexport function clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nexport const isArray = Array.isArray;\n\nexport function deepMixin(source, target, noArrayConcat) {\n    // summary: Does a deep merge of the given target into the given source.\n    // Note that arrays are concatenated during the merge unless noArrayConcat param is set to true.\n\n    // Note: Merging joins objects, but if an array is found it concatenates the values.  As a result, merging two query configs only merges the attributes of the config, but the child arrays are concatenated not merged.\n    if (source === undefined || target === undefined || source === target)\n        return;\n\n    if (!noArrayConcat && isArray(source)) {\n        for (var i = 0; i < target.length; i++)\n            source.push(target[i]); // join the array\n    } else if (isObject(source)) {\n        for (var key in target) {\n            if (source[key] && (isArray(source[key]) || isObject(source[key])))\n                deepMixin(source[key], target[key], noArrayConcat);\n            else\n                source[key] = target[key];\n        }\n    }\n    return source;\n}\n\n\nexport function millisecondsToSeconds(milliseconds) {\n    return Math.ceil(milliseconds / 1000)\n}\n\nexport function secondsToMilliseconds(seconds) {\n    return seconds * 1000;\n}\n\nexport function createPlayManager() {\n\n    let timeoutHandle,\n        localCurrentTime;\n    // startTime;\n\n    const cancelTimeout = () => {\n        if (timeoutHandle) {\n            clearTimeout(timeoutHandle);\n            timeoutHandle = null;\n        }\n    };\n\n    const update = function (props) {\n        const {\n            startTimeStamp,\n            startTime,\n            currentTime,\n            playing,\n            isEnded\n        } = props;\n\n        if (currentTime !== localCurrentTime) {\n            cancelTimeout();\n            localCurrentTime = currentTime;\n        }\n\n        if (playing) {\n\n            if (props.maxDuration) {\n\n                const maxDuration = props.maxDuration;\n\n                if(currentTime >= maxDuration && !isEnded) {\n                    props.onChange({\n                        isEnded : true,\n                        playing : false // stop when end is reached\n                    });\n                    // if(scene.loop) {\n                    //     props.onChange({\n                    //         currentTime : 1000 // restart\n                    //     });\n                    // } else {\n                    //     props.onChange({\n                    //         playing : false // stop when end is reached\n                    //     });\n                    // }\n                }\n\n                if (!timeoutHandle) {\n                    timeoutHandle = setTimeout(() => {\n                        timeoutHandle = null;\n\n                        if (playing) {\n                            props.onChange({\n                                currentTime : Date.now() - startTimeStamp + startTime // in milliseconds\n                            });\n                        }\n                    }, 100);\n                }\n            }\n        } else {\n            // startTime = null;\n            cancelTimeout();\n        }\n    };\n\n    return {\n        update,\n        destroy : function() {\n            cancelTimeout();\n        }\n    };\n}\n\n\nexport function findFirst(objTree, pattern) {\n    var findKeys = Object.keys(pattern);\n\n    var isMatch = function (obj) {\n        for (var i = 0, len = findKeys.length; i < len; i++) {\n            var key = findKeys[i];\n            var equals = obj[key] === pattern[key];\n            if (!equals)\n                return false;\n        }\n        return true;\n    };\n\n    var run = function (obj) {\n        if (isObject(obj) && obj !== null) {\n\n            if (isMatch(obj))\n                return obj;\n\n            for (var key in obj) {\n                let result = run(obj[key]);\n                if (result)\n                    return result;\n            }\n        } else if (Array.isArray(obj)) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                let result = run(obj[i]);\n                if (result)\n                    return result;\n            }\n        }\n    };\n\n    return run(objTree);\n};\n\n\nexport function findAndReplace(objTree, pattern) {\n    var cloneOfPattern = clone(pattern);\n    var isMatch = function (obj) {\n        var findKeys = Object.keys(cloneOfPattern);\n        for (var i = 0, len = findKeys.length; i < len; i++) {\n            var key = findKeys[i];\n            var founded = obj.hasOwnProperty(key);\n            if (founded) {\n                obj[key] = cloneOfPattern[key]\n                delete cloneOfPattern[key];\n            }\n        }\n    };\n\n    var run = function (obj) {\n        if (isObject(obj) && obj !== null) {\n\n            isMatch(obj)\n\n            for (var key in obj) {\n                let result = run(obj[key]);\n                if (result)\n                    return result;\n            }\n        } else if (Array.isArray(obj)) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                let result = run(obj[i]);\n                if (result)\n                    return result;\n            }\n        }\n    };\n\n    return run(objTree);\n};\n\n\nexport function debounce(func, wait) {\n    let timeout;\n    return function () {\n        const context = this,\n            args = arguments;\n\n        const later = function () {\n            timeout = null;\n            func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n};\n\n\nexport function urlHasParams(url) {\n    const arr = url.split('?');\n    return url.length > 1 && arr[1] !== '';\n}\n\nexport function urlHasTimeParam(url) {\n\n    const newUrl = new URL(url),\n        queryString = newUrl.search;\n\n    const urlParams = new URLSearchParams(queryString);\n    return urlParams.has('t')\n}\n\nexport function overrideTimeParam(url, timeValue) {\n    const newUrl = new URL(url),\n        query_string = url.search,\n        search_params = new URLSearchParams(query_string);\n\n    search_params.set('t', timeValue);\n    newUrl.search = search_params.toString();\n\n    return newUrl.toString();\n}\n\nexport function addUrlTimeParam(url, timeValue) {\n    const hasParam = urlHasParams(url);\n\n    if (hasParam) {\n        if (urlHasTimeParam(url)) {\n            return overrideTimeParam(url, timeValue);\n        }\n        return `${url}&t=${timeValue}`;\n    }\n    return `${url}?t=${timeValue}`;\n}\n\n\nexport function fromYouTubeUrlGetID(url) {\n    let ID = '';\n    url = url.replace(/(>|<)/gi, '').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n    if(url[2] !== undefined) {\n        ID = url[2].split(/[^0-9a-z_]/i);\n        ID = ID[0];\n    } else {\n        ID = url;\n    }\n    return ID;\n}\n\n\nexport function findValByKey(object, key) {\n    let value;\n    Object.keys(object).some(function(k) {\n        if(k === key) {\n            value = object[k];\n            return true;\n        }\n        if(object[k] && typeof object[k] === 'object') {\n            value = findValByKey(object[k], key);\n            return value !== undefined;\n        }\n        return undefined;\n    });\n    return value || guid();\n}\n","import React from 'react'\nimport {Redirect, Route} from 'react-router-dom'\nimport {isAuthenticated} from \"../../lib/jsUtils\";\nimport {SIGN_IN} from \"../../constant\";\n\nconst PrivateRoute = ({component : Component, ...rest}) => (\n    <Route {...rest} render={(props) => (\n        isAuthenticated() ? <Component {...props} />\n            : <Redirect to={{\n                pathname : SIGN_IN,\n                state    : {from : props.location}\n            }}/>)\n    }/>\n);\n\nexport default PrivateRoute;\n","import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport {BLOG, CREATE_NEW_POST, DRAFTS} from \"../../constant\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport {signOut} from \"../../lib/jsUtils\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root  : {\n        width           : '100%',\n        maxWidth        : 360,\n        backgroundColor : theme.palette.background.paper,\n    },\n    paper : {\n        width     : '80%',\n        maxHeight : 435,\n    },\n}));\n\n\nconst AuthenticatedNavBar = () => {\n    const [showLogoutDialog, setShowLogOutDialog] = useState(false);\n    return <div>\n        <Button component={Link} to={CREATE_NEW_POST}>\n            Create New Post\n        </Button>\n        <Button component={Link} to={DRAFTS}>\n            Drafts\n        </Button>\n        <Button onClick={() => setShowLogOutDialog(true)}>\n            Log Out\n        </Button>\n        {showLogoutDialog ? <LogOutDialog/> : null}\n    </div>\n};\n\nconst LogOutDialog = () => {\n    const [open, setOpen] = useState(true);\n\n    const handleCancel = () => {\n        setOpen(false)\n    };\n\n    const handleOk = () => {\n        setOpen(false);\n        signOut();\n        window.location.href = '/'\n        //TODO :implement right log out logic\n    };\n\n    return (\n        <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            maxWidth=\"xs\"\n            open={open}\n        >\n            <DialogTitle id=\"confirmation-dialog-title\">Log Out Confirmation</DialogTitle>\n            <DialogContent dividers>\n                Are you sure you want to logout? &#128561;\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleCancel} color=\"default\">\n                    Cancel\n                </Button>\n                <Button onClick={handleOk} color=\"secondary\">\n                    Log Out\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\n\nexport default AuthenticatedNavBar;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport {BLOG, DRAFTS, SIGN_IN, SIGN_UP} from \"../../constant\";\n\nconst NonAuthenticatedNavBar = () => {\n    return <div>\n        <Button component={Link} to={BLOG}>\n            Blog\n        </Button>\n        <Button component={Link} to={SIGN_IN}>\n            Login\n        </Button>\n        <Button component={Link} to={SIGN_UP}>\n            Sign Up\n        </Button>\n    </div>\n};\n\nexport default NonAuthenticatedNavBar;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Link, withRouter} from \"react-router-dom\";\nimport {SIGN_IN, SIGN_UP} from \"../../constant\";\nimport {isAuthenticated} from \"../../lib/jsUtils\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n// import AuthenticatedNavBar from \"./AuthenticatedNavBar\";\n// import NonAuthenticatedNavBar from \"./NonAuthenticatedNavBar\";\nimport Logo from \"../../assets/logo.png\";\nimport AuthenticatedNavBar from \"./AuthenticatedNavBar\";\nimport NonAuthenticatedNavBar from \"./NonAuthenticatedNavBar\";\n\nconst useStyles = makeStyles(theme => ({\n    appBar         : {\n        backgroundColor : \"white\",\n    },\n    logoIcon       : {marginRight : '0.5em'},\n    menuButton     : {\n        marginRight : theme.spacing(2),\n    },\n    titleContainer : {\n        textDecoration : 'none'\n    },\n    title          : {\n        display                      : 'none',\n        [theme.breakpoints.up('sm')] : {\n            display : 'inline-block',\n        },\n        color                        : \"rgba(48,56,64,.9)\",\n        fontSize                     : \"1.9rem\",\n        fontWeight                   : 500,\n        fontFamily                   : 'Roboto,Helvetica Neue,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol'\n    },\n    toolbarGutters : {\n        [theme.breakpoints.up('md')] : {\n            margin : theme.spacing(0, 20)\n        }\n    }\n}));\n\n\nconst Header = (props) => {\n    const {location, verify} = props;\n    const classes = useStyles();\n    const isLoginOrSignUpPage = location.pathname.includes(SIGN_UP) || location.pathname.includes(SIGN_IN);\n\n    return (\n        <div>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar classes={{gutters : isLoginOrSignUpPage ? classes.toolbarGutters : ''}}>\n                    <Box component={Link}\n                        className={classes.titleContainer}\n                        to={'/'}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                    >\n                        <img src={Logo} alt=\"\" width=\"60px\" className={classes.logoIcon}/>\n                        <Typography className={classes.title} variant=\"h6\">\n                            Real time feedo\n                        </Typography>\n                    </Box>\n\n                    <Box\n                        component='div'\n                        display=\"flex\"\n                        justifyContent=\"flex-end\"\n                        alignItems='center'\n                        style={{marginLeft : 'auto'}}\n                    >\n                        {isAuthenticated() ? <AuthenticatedNavBar/> : <NonAuthenticatedNavBar/>}\n                    </Box>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default withRouter(Header);\n","import React, {Fragment} from \"react\";\nimport Header from \"../Header/Header\";\n// import Footer from \"../Footer/Footer\";\nimport {CssBaseline} from '@material-ui/core';\nimport {SIGN_IN, SIGN_UP} from \"../../constant\";\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    \"@global\" : {\n        'html , body , #root' : {\n            height : \"100%\"\n        }\n    },\n    root      : {\n        display          : \"grid\",\n        gridTemplateRows : \"64px 1fr\",\n        height           : '100%'\n    }\n});\n\nconst Layout = (props) => {\n    const classes = useStyles();\n    const {children, location} = props,\n        {pathname = ''} = location;\n\n    if(pathname === SIGN_IN || pathname === SIGN_UP)\n        return <Fragment>\n            <CssBaseline/>\n            {children}\n        </Fragment>\n\n    return <div className={classes.root}>\n        <CssBaseline/>\n        <Header/>\n        <div>{children}</div>\n    </div>\n};\n\nexport default withRouter(Layout);\n","import decode from 'jwt-decode'\n\nexport function getTokenExpirationDate(token) {\n  const decoded = decode(token)\n  if (!decoded.exp) {\n    return null\n  }\n  const date = new Date(0) // The 0 here is the key, which sets the date to the epoch\n  date.setUTCSeconds(decoded.exp)\n  return date\n}\n\nexport function isTokenExpired(token) {\n  const date = getTokenExpirationDate(token)\n  const offsetSeconds = 0\n  if (date === null) {\n    return false\n  }\n  return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000)\n}\n","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {Redirect} from \"react-router-dom\";\nimport sideImage from '../../assets/image2.jpg';\nimport {SIGN_UP} from \"../../constant\";\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://github.com/AnnaNarim/\">\n                ANNA NARIM Production\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n\nconst LOGIN_USER_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n        name\n        email\n      }\n    }\n  }\n`;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root   : {\n        height : '100vh',\n    },\n    image  : {\n        backgroundImage    : `url(${sideImage})`,\n        backgroundRepeat   : 'no-repeat',\n        backgroundColor    :\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize     : 'cover',\n        backgroundPosition : 'center',\n    },\n    paper  : {\n        margin        : theme.spacing(8, 4),\n        display       : 'flex',\n        flexDirection : 'column',\n        alignItems    : 'center',\n    },\n    avatar : {\n        margin          : theme.spacing(1),\n        backgroundColor : theme.palette.secondary.main,\n    },\n    form   : {\n        width     : '100%', // Fix IE 11 issue.\n        marginTop : theme.spacing(1),\n    },\n    submit : {\n        margin : theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignInSide(props) {\n    const {refreshTokenFn, location} = props,\n        {state = {}} = location,\n        {from = {}} = state;\n    const classes = useStyles();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n    const [login] = useMutation(LOGIN_USER_MUTATION, {\n        onCompleted : ({login}) => {\n            if(refreshTokenFn)\n                refreshTokenFn(login.token);\n\n            setRedirectToReferrer(true);\n            setEmail('');\n            setPassword('');\n        }\n    });\n\n    if(redirectToReferrer) {\n        return <Redirect to={from.pathname || \"/\"}/>\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <Grid item xs={false} sm={4} md={7} className={classes.image}/>\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={(e) => {\n                        e.preventDefault();\n                        login({variables : {email, password}})\n                    }}>\n                        <TextField\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                        />\n                        <TextField\n                            value={password}\n                            onChange={e => setPassword(e.target.value)}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link href={SIGN_UP} variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright/>\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {Redirect} from \"react-router-dom\";\nimport sideImage from '../../assets/image1.jpg';\nimport {SIGN_IN} from \"../../constant\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://github.com/AnnaNarim\">\n                ANNA NARIM Production\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n\nconst SIGNUP_USER_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n      user {\n        id\n        name\n        email\n      }\n    }\n  }\n`;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root   : {\n        height : '100vh',\n    },\n    image  : {\n        backgroundImage    : `url(${sideImage})`,\n        backgroundRepeat   : 'no-repeat',\n        backgroundColor    :\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize     : 'cover',\n        backgroundPosition : 'center',\n    },\n    paper  : {\n        margin        : theme.spacing(8, 4),\n        display       : 'flex',\n        flexDirection : 'column',\n        alignItems    : 'center',\n    },\n    avatar : {\n        margin          : theme.spacing(1),\n        backgroundColor : theme.palette.secondary.main,\n    },\n    form   : {\n        width     : '100%', // Fix IE 11 issue.\n        marginTop : theme.spacing(1),\n    },\n    submit : {\n        margin : theme.spacing(3, 0, 2),\n    },\n}));\n\nconst INITIAL_INFO = {\n    email    : '',\n    password : '',\n    name     : '',\n};\n\nexport default function SignUpSide(props) {\n    const {refreshTokenFn, location} = props,\n        {state = {}} = location,\n        {from = {}} = state;\n\n    const classes = useStyles();\n    const [info, setInfo] = useState(INITIAL_INFO);\n    const {name, email, password} = info;\n\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n    const [signup] = useMutation(SIGNUP_USER_MUTATION, {\n        onCompleted : ({signup}) => {\n            if(refreshTokenFn)\n                refreshTokenFn(signup.token);\n\n            setRedirectToReferrer(true);\n            setInfo(INITIAL_INFO);\n        }\n    });\n\n    if(redirectToReferrer) {\n        return <Redirect to={from.pathname || \"/\"}/>\n    }\n\n    const changeHandler = (e) => setInfo({...info, [e.target.name] : e.target.value});\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <Grid item xs={false} sm={4} md={7} className={classes.image}/>\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={(e) => {\n                        e.preventDefault();\n                        signup({variables : {...info}})\n                    }}>\n                        <TextField\n                            value={name}\n                            onChange={changeHandler}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"User Name\"\n                            name=\"name\"\n                            autoComplete=\"name\"\n                            autoFocus\n                        />\n                        <TextField\n                            value={email}\n                            onChange={changeHandler}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                        />\n                        <TextField\n                            value={password}\n                            onChange={changeHandler}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link href={SIGN_IN} variant=\"body2\">\n                                    Already have an account!!!\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright/>\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, {Fragment, useState} from \"react\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop/Backdrop\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst DELETE_MUTATION = gql`\n    mutation deletePost($id: ID!) {\n        deletePost(id: $id) {\n            id\n        }\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1,\n        margin : \"0 !important\"\n    }\n}));\n\nconst DeletePost = ({title, id, refresh}) => {\n    const classes = useStyles();\n    const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n    const [deletePost, {loading}] = useMutation(DELETE_MUTATION);\n\n    return <Fragment>\n        <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\"/>\n        </Backdrop>\n        <IconButton color='secondary' onClick={() => setShowConfirmDialog(true)}>\n            <DeleteIcon/>\n        </IconButton>\n        {showConfirmDialog ? <DeletePostConfirmDialog\n            title={title}\n            onConfirm={() => deletePost({variables : {id}}).then(() => {\n                setShowConfirmDialog(false);\n                refresh();\n            })}\n            onClose={() => setShowConfirmDialog(false)}\n        /> : null}\n    </Fragment>\n};\n\nconst DeletePostConfirmDialog = ({title, onConfirm, onClose}) => {\n    const [open, setOpen] = useState(true);\n\n    const handleCancel = () => {\n        setOpen(false);\n        onClose();\n    };\n\n    const handleOk = () => {\n        setOpen(false);\n        onConfirm();\n    };\n\n    return (\n        <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            maxWidth=\"xs\"\n            open={open}\n        >\n            <DialogTitle id=\"confirmation-dialog-title\">Log Out Confirmation</DialogTitle>\n            <DialogContent dividers>\n                Are you sure you want delete {title} post? &#128561;\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleCancel} color=\"default\">\n                    Cancel\n                </Button>\n                <Button onClick={handleOk} color=\"secondary\">\n                    Delete\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\n\nexport default DeletePost;\n","import React, {Fragment, useEffect, useState} from \"react\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from '@material-ui/icons/EditOutlined';\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop/Backdrop\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\n\nconst UPDATE_MUTATION = gql`\n    mutation updateDraft($id: ID!,$title: String!, $content: String!) {\n        updateDraft(id: $id,title : $title, content:$content ) {\n            id\n        }\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1,\n        margin : \"0 !important\"\n    }\n}));\n\nconst UpdatePost = ({title, id, content, refresh}) => {\n    const classes = useStyles();\n    const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n    const [updateDraft, {loading}] = useMutation(UPDATE_MUTATION);\n\n    return <Fragment>\n        <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\"/>\n        </Backdrop>\n        <IconButton color='primary' onClick={() => setShowConfirmDialog(true)}>\n            <EditIcon/>\n        </IconButton>\n        {showConfirmDialog ? <EditPostConfirmDialog\n            title={title}\n            content={content}\n            onConfirm={(info) => updateDraft({variables : {...info, id}}).then(() => {\n                setShowConfirmDialog(false);\n                refresh()\n            })}\n            onClose={() => setShowConfirmDialog(false)}\n        /> : null}\n    </Fragment>\n};\n\nconst VALIDATION_INITIAL_STATE = {isValid : true, errorMsgs : {}};\n\nconst validateForm = (info) => {\n    const errorMsgs = {};\n    if(!info.title) {\n        errorMsgs.title = 'Title is required field'\n    }\n\n    if(!info.content) {\n        errorMsgs.content = 'Content is required field'\n    }\n\n    return {isValid : !Object.keys(errorMsgs).length, errorMsgs}\n};\n\nconst EditPostConfirmDialog = ({title : PropsTitle, content : PropsContent, onConfirm, onClose}) => {\n    const [open, setOpen] = useState(true);\n    const [info, setInfo] = useState({title : PropsTitle, content : PropsContent});\n    const [validInfo, setValidInfo] = useState(VALIDATION_INITIAL_STATE);\n\n    const {title, content} = info,\n        {isValid, errorMsgs = {}} = validInfo;\n\n    useEffect(() => {\n        if(!validInfo.isValid) {\n            setValidInfo(VALIDATION_INITIAL_STATE)\n        }\n    }, [info]);\n\n    const handleCancel = () => {\n        setOpen(false);\n        onClose();\n    };\n\n    const handleOk = () => {\n        const newValidInfo = validateForm(info);\n        if(newValidInfo.isValid === true) {\n            onConfirm(info);\n            setOpen(false);\n        } else {\n            setValidInfo(newValidInfo)\n        }\n    };\n\n    return (\n        <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            maxWidth=\"xs\"\n            open={open}\n        >\n            <DialogTitle id=\"confirmation-dialog-title\">Post Edit</DialogTitle>\n            <DialogContent dividers>\n                <TextField\n                    autoFocus\n                    label=\"Title\"\n                    placeholder=\"Title\"\n                    error={Boolean(errorMsgs.title)}\n                    helperText={Boolean(errorMsgs.title) ? errorMsgs.title : ''}\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    type=\"content\"\n                    value={title}\n                    name='title'\n                    onChange={({target}) => setInfo({...info, [target.name] : target.value})}\n                />\n                <TextField\n                    label=\"Content\"\n                    multiline\n                    rows={5}\n                    rowsMax={10}\n                    placeholder=\"Content\"\n                    error={Boolean(errorMsgs.content)}\n                    helperText={Boolean(errorMsgs.content) ? errorMsgs.content : ''}\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    type=\"content\"\n                    value={content}\n                    name='content'\n                    onChange={({target}) => setInfo({...info, [target.name] : target.value})}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleCancel} color=\"default\">\n                    Cancel\n                </Button>\n                <Button onClick={handleOk} color=\"primary\">\n                    Save\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default UpdatePost;\n","import React, {Fragment} from \"react\";\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop/Backdrop\";\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\n\nconst PUBLISH_MUTATION = gql`\n    mutation publish($id: ID!, $published :Boolean!) {\n        publish(id: $id, published:$published) {\n            id\n            published\n        }\n    }\n`;\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1,\n        margin : \"0 !important\"\n    }\n}));\n\nconst PublishPost = ({isPublished, id, refresh}) => {\n    const classes = useStyles();\n    const [publish, {loading}] = useMutation(PUBLISH_MUTATION);\n\n    return <Fragment>\n        <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\"/>\n        </Backdrop>\n        <FormControlLabel\n            style={{marginRight : \"auto\"}}\n            control={\n                <GreenSwitch\n                    checked={isPublished}\n                    onChange={() => {\n                        publish({variables : {id, published : !isPublished}}).then(() => {\n                            refresh()\n                        })\n                    }}\n                    name=\"isDraft\"\n                    color=\"secondary\"\n                />\n            }\n            label=\"Publish\"\n        />\n    </Fragment>\n};\n\n\nconst GreenSwitch = withStyles({\n    switchBase : {\n        color                : '#fafafa',\n        '&$checked'          : {\n            color : 'rgb(26,148,49)',\n        },\n        '&$checked + $track' : {\n            backgroundColor : 'rgb(26,148,49)'\n        },\n    },\n    checked    : {},\n    track      : {},\n})(Switch);\nexport default PublishPost;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport {Link} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core\";\nimport DeletePost from \"./PostDelete\";\nimport UpdatePost from \"./PostEdit\";\nimport PublishPost from \"./PostPublish\";\n\nconst useStyles = makeStyles({\n    root  : {\n        margin : 15\n    }\n});\n\nexport default function Post({isPublished, post,refresh}) {\n    const classes = useStyles();\n\n\n    const {title, id, content, author} = post;\n\n    return (\n        <Card className={classes.root} elevation={3}>\n            <CardActionArea component={Link} to={`/post/${id}`}>\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" noWrap>\n                        {title}\n\n                        {/*{author.name}*/}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {content}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions style={{justifyContent : \"flex-end\"}}>\n                <PublishPost id={id} isPublished={isPublished} refresh={refresh} />\n                <DeletePost title={title} id={id} refresh={refresh}/>\n                <UpdatePost  title={title} id={id}  content={content} refresh={refresh}/>\n            </CardActions>\n        </Card>\n    );\n}\n","import React, {Fragment, useState} from 'react'\nimport Post from '../../components/Post/Post'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from \"@apollo/react-hooks\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {withRouter} from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Paper from \"@material-ui/core/Paper\";\n\nconst DRAFTS_QUERY = gql`\n    query DraftsQuery {\n        drafts {\n            id\n            content\n            title\n            published\n            author {\n                name\n            }\n        }\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1\n    }\n}));\n\n\nconst DraftsPage = (props) => {\n    const {location} = props,\n        {state = {}} = location,\n        {shouldRefetch = false} = state;\n\n    const [needRefetch, setNeedRefetch] = useState(shouldRefetch);\n\n    const classes = useStyles();\n    const {loading, error, data = {}, refetch} = useQuery(DRAFTS_QUERY, {\n        options : {fetchPolicy : 'network-only',}\n    });\n    const {drafts = []} = data;\n\n    if(needRefetch) {\n        refetch();\n        setNeedRefetch(false);\n    }\n\n    return (\n        <Fragment>\n            <Backdrop className={classes.backdrop} open={loading}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n            <Container>\n                <h1>Drafts</h1>\n                <GridList cellHeight={\"auto\"} cols={3} spacing={10}>\n                    {drafts.map((draft) => (\n                        <GridListTile key={draft.id}>\n                            <Post\n                                post={draft}\n                                refresh={() => refetch()}\n                                isPublished={draft.published}\n                            />\n                        </GridListTile>\n                    ))}\n                </GridList>\n            </Container>\n        </Fragment>\n    )\n};\n\nexport default withRouter(DraftsPage);\n","import {gql} from \"apollo-boost\";\nimport React, {useEffect, useState} from \"react\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {DRAFTS} from \"../../constant\";\nimport {Redirect} from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {clone} from \"../../lib/jsUtils\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst CREATE_DRAFT_MUTATION = gql`\n    mutation CreateDraftMutation($title: String!,$anonymous:Boolean!, $content: String!, $answerType:String!, $fields:[inputField!]! ) {\n        createDraft(title: $title,anonymous: $anonymous content: $content, answerType : $answerType,fields: $fields) {\n            id\n            title\n            content\n            answerType\n        }\n    }\n`;\n\n\nconst useStyles = makeStyles((theme) => ({\n    submitBtn          : {},\n    selection          : {\n        margin : \"15px 0\"\n    },\n    answerTypesWrapper : {\n        display             : \"grid\",\n        gridTemplateColumns : \"1fr auto\",\n        gridGap             : \"1em\",\n        alignItems          : 'baseline'\n    },\n    fieldWrapper       : {\n        display    : \"flex\",\n        alignItems : \"center\",\n        margin     : \"5px 0\",\n        \"& > div \" : {\n            marginRight : 8\n        }\n    },\n    fieldsContainer    : {\n        margin : \"15px 0\"\n    }\n}));\n\nconst INITIAL_STATE = {\n    title      : \"\",\n    content    : '',\n    anonymous  : true,\n    answerType : 'percentageAndText',\n    fields     : []\n};\n\nconst VALIDATION_INITIAL_STATE = {isValid : true, errorMsgs : {}};\n\nconst validateForm = (info) => {\n    const errorMsgs = {};\n    if(!info.title) {\n        errorMsgs.title = 'Title is required field'\n    }\n\n    if(!info.content) {\n        errorMsgs.content = 'Content is required field'\n    }\n\n    if(!info.fields.length) {\n        errorMsgs.fields = 'At least one field is required'\n    }\n\n    return {isValid : !Object.keys(errorMsgs).length, errorMsgs}\n};\n\nconst CreatePost = (props) => {\n    const classes = useStyles();\n    const [info, setInfo] = useState(INITIAL_STATE);\n    const [validInfo, setValidInfo] = useState(VALIDATION_INITIAL_STATE);\n\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n    const [createDraft] = useMutation(CREATE_DRAFT_MUTATION);\n\n    const answerTypeOptions = [\n        {value : 'percentage', label : 'Percentage'},\n        {value : 'text', label : 'Text'},\n        {value : 'percentageAndText', label : 'Percentage and Text'}\n    ];\n\n    const {title, content, answerType, fields, anonymous} = info,\n        {isValid, errorMsgs = {}} = validInfo;\n\n    useEffect(() => {\n        if(!validInfo.isValid) {\n            setValidInfo(VALIDATION_INITIAL_STATE)\n        }\n    }, [info]);\n\n    if(redirectToReferrer) {\n        return <Redirect to={{\n            pathname : DRAFTS,\n            state    : {shouldRefetch : true}\n        }}/>\n    }\n\n\n    return <Container fixed>\n        <h1>Create Draft</h1>\n        <form onSubmit={(e) => {\n            e.preventDefault();\n            const newValidInfo = validateForm(info);\n            if(newValidInfo.isValid === true) {\n                createDraft({variables : {...info}}).then(() => {\n                    setRedirectToReferrer(true);\n                    setInfo(INITIAL_STATE)\n                });\n            } else {\n                setValidInfo(newValidInfo)\n            }\n        }}>\n            <TextField\n                autoFocus\n                label=\"Title\"\n                placeholder=\"Title\"\n                error={Boolean(errorMsgs.title)}\n                helperText={Boolean(errorMsgs.title) ? errorMsgs.title : ''}\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                type=\"content\"\n                value={title}\n                name='title'\n                onChange={({target}) => setInfo({...info, [target.name] : target.value})}\n            />\n            <TextField\n                label=\"Content\"\n                multiline\n                rows={5}\n                rowsMax={10}\n                placeholder=\"Content\"\n                error={Boolean(errorMsgs.content)}\n                helperText={Boolean(errorMsgs.content) ? errorMsgs.content : ''}\n                fullWidth\n                margin=\"normal\"\n                variant=\"outlined\"\n                type=\"content\"\n                value={content}\n                name='content'\n                onChange={({target}) => setInfo({...info, [target.name] : target.value})}\n            />\n\n            <div className={classes.answerTypesWrapper}>\n                <TextField\n                    disabled={fields.length}\n                    className={classes.selection}\n                    select\n                    fullWidth\n                    label=\"Select type of the answer\"\n                    value={answerType}\n                    name='answerType'\n                    onChange={({target}) => setInfo({...info, [target.name] : target.value})}\n                    variant=\"outlined\"\n                    helperText=\"Please select preferred type of answers\"\n                >\n                    {answerTypeOptions.map((option) => (\n                        <MenuItem key={option.value} value={option.value}>{option.label}</MenuItem>))}\n                </TextField>\n\n\n                <div>\n                    <Button\n                        color='primary'\n                        variant=\"contained\"\n                        onClick={() => setInfo({\n                            ...info,\n                            fields : fields.concat([{type : answerType, label : ''}])\n                        })}\n                    >\n                        Add Field\n                    </Button>\n                </div>\n            </div>\n\n\n            <div className={classes.fieldsContainer}>\n                {fields.map((field, index) => {\n                    return <div key={index} className={classes.fieldWrapper}>\n                        <TextField\n                            style={{flex : 1}}\n                            placeholder=\"Question Label\"\n                            variant=\"outlined\"\n                            value={field.label}\n                            name='content'\n                            onChange={({target}) => {\n                                const updatedField = {...field, label : target.value};\n                                const updatedFields = clone(fields);\n                                updatedFields[index] = updatedField;\n\n                                setInfo({...info, fields : updatedFields})\n                            }}\n                        />\n\n                        {answerType === \"percentageAndText\" ?\n                            <TextField\n                                style={{minWidth : 220}}\n                                select\n                                label=\"Select type answer type\"\n                                value={field.type}\n                                onChange={({target}) => {\n                                    const updatedField = {...field, type : target.value};\n                                    const updatedFields = clone(fields);\n                                    updatedFields[index] = updatedField;\n\n                                    setInfo({...info, fields : updatedFields})\n                                }}\n                                variant=\"outlined\"\n                            >\n                                <MenuItem value={'percentage'}>Percentage</MenuItem>\n                                <MenuItem value={'text'}>Text</MenuItem>\n                            </TextField>\n                            : null\n                        }\n\n                        <IconButton onClick={() => {\n                            const updatedFields = fields.filter((a, i) => i !== index);\n                            setInfo({...info, fields : updatedFields})\n                        }}>\n                            <DeleteIcon/>\n                        </IconButton>\n                    </div>\n                })}\n            </div>\n\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={anonymous}\n                        onChange={({target}) => setInfo({...info, [target.name] : target.checked})}\n                        name=\"anonymous\"\n                        color=\"primary\"\n                    />\n                }\n                label=\"Leave answer anonymously\"\n            />\n\n            <Button className={classes.submitBtn}\n                color='primary'\n                variant=\"contained\"\n                disabled={!isValid}\n                type=\"submit\"\n            >\n                Create\n            </Button>\n        </form>\n    </Container>;\n};\n\nexport default CreatePost;\n","import React, {Fragment, useLayoutEffect, useState} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {withRouter} from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport QRCode from 'qrcode.react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop/Backdrop\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {DOMAIN} from \"../../constant\";\n\nconst CREATE_CLASS_MUTATION = gql`\n    mutation CreateClasstMutation($name: String!, $postId: ID! ) {\n        createClass(name: $name, postId: $postId) {\n            id\n        }\n    }\n`;\n\nfunction useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n\nconst QrComponent = ({postId}) => {\n    const classes = useStyles();\n    const [className, setClassName] = useState('');\n    const [keyValue, setKeyValue] = useState('');\n    const [createClass, {loading}] = useMutation(CREATE_CLASS_MUTATION);\n\n    const QRvalue = DOMAIN + keyValue;\n\n    return (\n        <Fragment>\n            <Backdrop className={classes.backdrop} open={loading}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n            <div style={{\n                display             : \"grid\",\n                gridTemplateColumns : \"1fr 1fr\",\n                gridGap             : '1em',\n                height              : \"100%\"\n            }}>\n\n                <div style={{display : \"grid\", gridTemplateRows : \"1fr 1fr\", gridGap : '1em'}}>\n                    <TextField\n                        label=\"Class Name\"\n                        value={className}\n                        onChange={(e) => setClassName(e.target.value)}\n                    />\n                    <Button\n                        disabled={!className}\n                        style={{margin : \"15px 0\"}}\n                        color='primary'\n                        variant=\"contained\"\n                        onClick={() => createClass({\n                            variables : {\n                                name : className,\n                                postId\n                            }\n                        }).then(({data}) => setKeyValue(data.createClass.id))}>\n                        Generate QR and Key\n                    </Button>\n\n                    <FullScreenDialog\n                        keyValue={keyValue}\n                        renderQr={(size) => <QRCode value={QRvalue} size={size} level={'H'}/>}/>\n                </div>\n\n                <div style={{\n                    display          : \"grid\",\n                    gridTemplateRows : \"1fr auto\",\n                    justifyItems     : \"center\",\n                    alignItems       : \"center\"\n                }}>\n                    <QRCode value={QRvalue} level={'H'}/>\n                    <Typography variant='h5'>{keyValue}</Typography>\n                </div>\n\n            </div>\n\n        </Fragment>\n    )\n\n};\n\nexport default withRouter(QrComponent);\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1,\n        margin : \"0 !important\"\n    },\n    appBar   : {\n        position : 'relative',\n    },\n    title    : {\n        marginLeft : theme.spacing(2),\n        flex       : 1,\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction FullScreenDialog({renderQr, keyValue}) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [width, height] = useWindowSize();\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const size = width / 2;\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" style={{width : \"100%\"}} onClick={handleClickOpen}>\n                Open full-screen QR\n            </Button>\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n\n                <div style={{\n                    height       : \"100%\",\n                    width        : \"100%\",\n                    display      : 'grid',\n                    alignItems   : \"center\",\n                    justifyItems : \"center\",\n                    margin       : 10\n                }}>\n                    {renderQr(size / 1.3)}\n                    <Typography variant='h1'>{keyValue}</Typography>\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n","import React, {PureComponent} from 'react';\nimport {\n    Bar,\n    BarChart,\n    CartesianGrid,\n    Cell,\n    PolarAngleAxis,\n    PolarGrid,\n    PolarRadiusAxis,\n    Radar,\n    RadarChart,\n    XAxis,\n    YAxis,\n} from 'recharts';\nimport {scaleOrdinal} from 'd3-scale';\nimport {schemeCategory10} from 'd3-scale-chromatic';\n\nconst colors = scaleOrdinal(schemeCategory10).range();\n\n\nconst data = [\n    {\n        subject : 'Math', A : 120, B : 110, fullMark : 150,\n    },\n    {\n        subject : 'Chinese', A : 98, B : 130, fullMark : 150,\n    },\n    {\n        subject : 'English', A : 86, B : 130, fullMark : 150,\n    },\n    {\n        subject : 'Geography', A : 99, B : 100, fullMark : 150,\n    },\n    {\n        subject : 'Physics', A : 85, B : 90, fullMark : 150,\n    },\n    {\n        subject : 'History', A : 65, B : 85, fullMark : 150,\n    },\n];\n\n\nconst data2 = [\n    {\n        name : 'Page A', uv : 4000, female : 2400, male : 2400,\n    },\n    {\n        name : 'Page B', uv : 3000, female : 1398, male : 2210,\n    },\n    {\n        name : 'Page C', uv : 2000, female : 9800, male : 2290,\n    },\n    {\n        name : 'Page D', uv : 2780, female : 3908, male : 2000,\n    },\n    {\n        name : 'Page E', uv : 1890, female : 4800, male : 2181,\n    },\n    {\n        name : 'Page F', uv : 2390, female : 3800, male : 2500,\n    },\n    {\n        name : 'Page G', uv : 3490, female : 4300, male : 2100,\n    },\n];\n\nconst getPath = (x, y, width, height) => `M${x},${y + height}\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${x + width / 2}, ${y}\n          C${x + width / 2},${y + height / 3} ${x + 2 * width / 3},${y + height} ${x + width}, ${y + height}\n          Z`;\n\nconst TriangleBar = (props) => {\n    const {\n        fill, x, y, width, height,\n    } = props;\n\n    return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill}/>;\n};\n\nexport default class ChartsComponent extends PureComponent {\n\n    render() {\n        return <div style={{\n            display             : \"grid\",\n            gridTemplateColumns : \"1fr 1fr\",\n            alignItems          : \"center\",\n            justifyItems        : \"center\"\n        }}>\n            <BarChart\n                width={500}\n                height={400}\n                data={data2}\n                margin={{\n                    top : 20, right : 30, left : 20, bottom : 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"name\"/>\n                <YAxis/>\n                <Bar dataKey=\"female\" fill=\"#8884d8\" shape={<TriangleBar/>} label={{position : 'top'}}>\n                    {\n                        data2.map((entry, index) => (\n                            <Cell key={`cell-${index}`} fill={colors[index % 20]}/>\n                        ))\n                    }\n                </Bar>\n            </BarChart>\n\n            <RadarChart cx={300} cy={250} width={500} height={500} data={data}>\n                <PolarGrid/>\n                <PolarAngleAxis dataKey=\"subject\"/>\n                <PolarRadiusAxis/>\n                <Radar name=\"Mike\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6}/>\n            </RadarChart>\n        </div>\n    }\n}\n\n","import React, {Fragment} from \"react\";\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop/Backdrop\";\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\n\nconst CLASS_PUBLISH_MUTATION = gql`\n    mutation publishClass($id: ID!, $published :Boolean!) {\n        publishClass(id: $id, published:$published) {\n            id\n            published\n        }\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1,\n        margin : \"0 !important\"\n    }\n}));\n\nconst PublishClass = ({published, id, refresh}) => {\n    const classes = useStyles();\n    const [publishClass, {loading}] = useMutation(CLASS_PUBLISH_MUTATION);\n\n    return <Fragment>\n        <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\"/>\n        </Backdrop>\n        <FormControlLabel\n            style={{marginRight : \"auto\"}}\n            control={\n                <GreenSwitch\n                    size=\"small\"\n                    checked={published}\n                    onChange={() => {\n                        publishClass({variables : {id, published : !published}}).then(() => refresh())\n                    }}\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                    }}\n                    color=\"secondary\"\n                />\n            }\n            label=\"Accept answers\"\n        />\n    </Fragment>\n};\n\n\nconst GreenSwitch = withStyles({\n    switchBase : {\n        color                : '#fafafa',\n        '&$checked'          : {\n            color : 'rgb(26,148,49)',\n        },\n        '&$checked + $track' : {\n            backgroundColor : 'rgb(26,148,49)'\n        },\n    },\n    checked    : {},\n    track      : {},\n})(Switch);\nexport default PublishClass;\n","import React, {Fragment} from 'react'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from \"@apollo/react-hooks\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport DeletePost from \"../Post/PostDelete\";\nimport PublishPost from \"../Post/PostPublish\";\nimport UpdatePost from \"../Post/PostEdit\";\nimport {Paper} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport QrComponent from \"./QrComponent\";\nimport ChartsComponent from \"./ChartsComponent\";\nimport {DRAFTS} from \"../../constant\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PublishClass from \"./ClassPublish\";\n\nconst POST_QUERY = gql`\n    query PostQuery($id: ID!) {\n        post(id: $id) {\n            id\n            title\n            content\n            published\n            author {\n                name\n            }\n            classes{\n                id\n                name\n                published\n            }\n        }\n    }\n`;\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop      : {\n        zIndex : theme.zIndex.drawer + 1\n    },\n    root          : {\n        height  : '100%',\n        padding : theme.spacing(2),\n    },\n    paper         : {\n        padding : theme.spacing(2),\n        height  : \"100%\",\n        color   : theme.palette.text.secondary,\n    },\n    item          : {\n        padding : 10\n    },\n    selectionRoot : {\n        '& .MuiTextField-root': {\n            display             : \"grid\",\n            gridTemplateColumns : \"1fr auto\",\n            gridGap             : \"1em\"\n        },\n    }\n\n}));\n\n\nconst SinglePostView = (props) => {\n    const {match, history} = props,\n        {params = {}} = match,\n        {id} = params;\n\n    if(!id)\n        return <Redirect to={'/'}/>;\n\n\n    const classes = useStyles();\n    const {loading, data = {}, refetch} = useQuery(POST_QUERY, {\n        variables : {id},\n        options   : {fetchPolicy : 'network-only'}\n    });\n\n    const refresh = () => refetch();\n\n    const {post = {}} = data;\n\n    if(!post)\n        return <Redirect to={'/'}/>;\n\n\n    const {title, content, published, classes : postClasses = []} = post;\n\n    return (\n        <Fragment>\n            <Backdrop className={classes.backdrop} open={loading}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n            <Grid className={classes.root}\n                container\n                alignItems=\"stretch\"\n            >\n                <Grid item xs={12} sm={6} className={classes.item}>\n                    <Paper className={classes.paper} elevation={6}>\n                        <fieldset>\n                            <legend>Title</legend>\n                            {title}\n                        </fieldset>\n\n                        <fieldset>\n                            <legend>Content</legend>\n                            {content}\n                        </fieldset>\n\n                        <div style={{display : \"flex\", paddingTop : 10}}>\n                            <PublishPost id={id} isPublished={!!published} refresh={refresh}/>\n                            <DeletePost title={title} id={id} refresh={() => history.push({\n                                pathname : DRAFTS,\n                                state    : {shouldRefetch : true}\n                            })}/>\n                            <UpdatePost title={title} id={id} content={content} refresh={() => refresh()}/>\n                        </div>\n\n\n                        {!!postClasses ? <TextField\n                                className={classes.selection}\n                                select\n                                fullWidth\n                                label=\"Select class\"\n                                // value={answerType}\n                                name='answerType'\n                                classes={{\n                                    root : classes.selectionRoot\n                                }}\n\n                                // onChange={({target}) => setInfo({...info, [target.name] : target.value})}\n                                variant=\"outlined\"\n                                helperText=\"Please select class to see the answers statistic\"\n                            >\n                                {postClasses.map(({id, name, published}) => (\n                                    <MenuItem key={id} value={id} style={{\n                                        display             : \"grid\",\n                                        gridTemplateColumns : \"1fr auto\",\n                                        gridGap             : \"1em\"\n                                    }}>\n                                        {name}\n                                        <PublishClass published={published} id={id} refresh={() => refresh()}/>\n                                    </MenuItem>))}\n                            </TextField>\n\n                            : null}\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={6} className={classes.item}>\n                    <Paper elevation={6} className={classes.paper}>\n                        <QrComponent postId={id}/>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} className={classes.item}>\n                    <Paper elevation={6} className={classes.paper}>\n                        <ChartsComponent/>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Fragment>\n    )\n};\n\nexport default withRouter(SinglePostView);\n","import React, {Fragment} from 'react'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from \"@apollo/react-hooks\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport DeletePost from \"../Post/PostDelete\";\nimport PublishPost from \"../Post/PostPublish\";\nimport UpdatePost from \"../Post/PostEdit\";\nimport {Paper} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {DRAFTS} from \"../../constant\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {clone} from \"../../lib/jsUtils\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst FIELDS_QUERY = gql`\n    query AnswerFormQuery($id: ID!) {\n        class(id: $id) {\n            id\n            name\n            post {\n                id\n                fields{\n                    id\n                    label\n                    type\n                }\n            }\n            published\n\n        }\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1\n    },\n    root     : {\n        padding : '2em'\n    }\n\n}));\n\n\nconst SinglePostView = (props) => {\n    const {match, history} = props,\n        {params = {}} = match,\n        {id} = params;\n\n    if(!id)\n        return <Redirect to={'/'}/>;\n\n\n    const classes = useStyles();\n    const {loading, data = {}, refetch} = useQuery(FIELDS_QUERY, {\n        variables : {id},\n        options   : {fetchPolicy : 'network-only'}\n    });\n\n    const refresh = () => refetch();\n\n    const {class : postClass = {}} = data;\n\n    if(!postClass)\n        return <Redirect to={'/'}/>;\n\n\n    const {name, post = {}, published, anonymous} = postClass;\n\n    const {fields = []} = post;\n\n\n    if(published === false) {\n        return <h1>Oooops time is out!!</h1>\n    }\n\n    return (\n        <Container fixed className={classes.root}>\n            <Backdrop className={classes.backdrop} open={loading}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n\n            <Typography align='center'>Class {name}</Typography>\n\n            {fields.map(field => {\n                return <TextField\n                    fullWidth\n                    margin='normal'\n                    variant=\"outlined\"\n                    label={field.label}\n                    onChange={({target}) => {\n                    }}\n                />\n            })}\n\n            <Button\n                color='primary'\n                variant=\"contained\"\n            >\n                Submit Answers\n            </Button>\n        </Container>\n    )\n};\n\nexport default withRouter(SinglePostView);\n","import React, {useEffect, useState} from 'react'\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom'\nimport PrivateRoute from \"./PrivateRoute\"\nimport {AUTH_TOKEN, BLOG, CREATE_NEW_POST, DRAFTS, SIGN_IN, SIGN_UP} from \"../../constant\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {isAuthenticated} from \"../../lib/jsUtils\";\nimport Layout from \"../Layout/Layout\";\nimport {useQuery} from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport {isTokenExpired} from \"../../helper/jwtHelper\";\nimport SignInSide from \"../Authentication/Login\";\nimport SignUpSide from \"../Authentication/SignUp\";\nimport DraftsPage from \"../Drafts/Drafts\";\nimport CreatePost from \"../CreatePost/CreatePost\";\nimport Backdrop from \"@material-ui/core/Backdrop/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport SinglePostView from \"../SinglePostView/SinglePostView\";\nimport PostAnswersForm from \"../PostAnswersForm/PostAnswersForm\";\n\n\nconst ME_QUERY = gql`\n  query MeQuery {\n    me {\n      id\n      email\n      name\n    }\n  }\n`;\n\n\nconst Public = () => <h3>Public</h3>;\nconst Blog = () => <h3>Blog</h3>;\nconst Protected = () => <h3>Protected</h3>;\n\nconst verify = (setToken) => {\n    try {\n        const token = localStorage.getItem(AUTH_TOKEN);\n        if(token !== null && token !== undefined) {\n            const expired = isTokenExpired(token);\n            if(!expired) {\n                setToken(token)\n            } else {\n                localStorage.removeItem(AUTH_TOKEN);\n                setToken(token)\n            }\n        }\n    } catch(e) {\n        console.log('')\n    }\n};\n\n\nexport default function App({token : PropsToken}) {\n    const [token, setToken] = useState(PropsToken);\n    const {loading, error, data} = useQuery(ME_QUERY);\n\n    useEffect(() => {\n        verify(setToken)\n    }, []);\n\n    const refreshTokenFn = (token) => {\n        if(token) {\n            localStorage.setItem(AUTH_TOKEN, token)\n        } else {\n            localStorage.removeItem(AUTH_TOKEN)\n        }\n    };\n\n    // if(loading){\n    //     return <Backdrop open={true}>\n    //         <CircularProgress color=\"inherit\"/>\n    //     </Backdrop>\n    // }\n\n    return (\n        <BrowserRouter>\n            <Layout>\n                <Switch>\n                    {/*Example*/}\n                    <Route exact path=\"/public\" component={Public}/>\n                    <PrivateRoute exact path='/protected' component={Protected}/>\n\n                    <Route exact path='/' component={Public}/>\n                    <Route exact path={BLOG} component={Blog}/>\n                    <Route exact path={SIGN_IN} render={(props) =>\n                        isAuthenticated() ? <Redirect to={'/'}/> :\n                            <SignInSide {...props} refreshTokenFn={refreshTokenFn}/>}/>\n                    <Route exact path={SIGN_UP} render={(props) =>\n                        isAuthenticated() ? <Redirect to={'/'}/> :\n                            <SignUpSide {...props} refreshTokenFn={refreshTokenFn}/>}/>\n\n                    <PrivateRoute path={CREATE_NEW_POST} component={CreatePost}/>\n                    <PrivateRoute path={DRAFTS} component={DraftsPage}/>\n                    <PrivateRoute path=\"/post/:id\" component={SinglePostView}/>\n                    <Route path=\"/answer/:id\" component={PostAnswersForm}/>\n\n                    <Route render={() =>\n                        <Paper elevation={15} style={{margin : \"20px 10px\", padding : \"20px 10px\"}}>\n                            <Typography color='textSecondary' variant={'h1'} align='center'>\n                                Error 404\n                            </Typography>\n                            <Typography color='textSecondary' variant={'h4'} align='center'>\n                                Page not found <span role='img' aria-label='hey'>&#128542;</span>\n                            </Typography>\n                        </Paper>}/>\n                </Switch>\n            </Layout>\n        </BrowserRouter>\n    )\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {AUTH_TOKEN} from './constant'\nimport {ThemeProvider} from '@material-ui/core/styles'\nimport {ApolloProvider} from '@apollo/react-hooks'\nimport 'dotenv/config'\nimport {getTheme} from './lib/appTheme'\nimport ApolloClient from 'apollo-boost'\nimport App from \"./components/App/App\"\n\nconst client = new ApolloClient({\n  uri     : 'http://localhost:4000',\n  request : (operation) => {\n    const token = localStorage.getItem(AUTH_TOKEN);\n    operation.setContext({headers : {Authorization : token ? `Bearer ${token}` : '',}})\n  },\n  onError : ({graphQLErrors, networkError}) => {\n    if(graphQLErrors) {\n      graphQLErrors.forEach(err => {\n        // alert(err.message)\n      })\n    } else if(networkError) {\n      alert(networkError)\n    }\n  }\n});\n\n\nconst token = localStorage.getItem(AUTH_TOKEN);\n\nconst MyApp = () => (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={getTheme()}>\n        <App token={token}/>\n      </ThemeProvider>\n    </ApolloProvider>\n);\n\nrender(<MyApp/>, document.getElementById('root'));\n","import {createMuiTheme} from '@material-ui/core/styles';\n\n\nexport function getTheme() {\n    return createMuiTheme({\n        palette : {\n            primary : {\n                main : '#1976d2'\n            }\n        }\n    })\n};\n"],"sourceRoot":""}